#pragma once
#include "EnumHexConverter.h"
#include <Windows.h>
#include <WinBase.h>
namespace PeImageClr
{
	using namespace System::ComponentModel;
	[TypeConverter(EnumHexConverter::typeid)]
	public enum class  MachineType :WORD
	{
		UNKNOWN = IMAGE_FILE_MACHINE_UNKNOWN,
		I386 = IMAGE_FILE_MACHINE_I386,
		R3000 = IMAGE_FILE_MACHINE_R3000,
		R4000 = IMAGE_FILE_MACHINE_R4000,
		R10000 = IMAGE_FILE_MACHINE_R10000,
		WCEMIPSV2 = IMAGE_FILE_MACHINE_WCEMIPSV2,
		ALPHA = IMAGE_FILE_MACHINE_ALPHA,
		SH3 = IMAGE_FILE_MACHINE_SH3,
		SH3DSP = IMAGE_FILE_MACHINE_SH3DSP,
		SH3E = IMAGE_FILE_MACHINE_SH3E,
		SH4 = IMAGE_FILE_MACHINE_SH4,
		SH5 = IMAGE_FILE_MACHINE_SH5,
		ARM = IMAGE_FILE_MACHINE_ARM,
		THUMB = IMAGE_FILE_MACHINE_THUMB,
		ARMNT = IMAGE_FILE_MACHINE_ARMNT,
		AM33 = IMAGE_FILE_MACHINE_AM33,
		POWERPC = IMAGE_FILE_MACHINE_POWERPC,
		POWERPCFP = IMAGE_FILE_MACHINE_POWERPCFP,
		IA64 = IMAGE_FILE_MACHINE_IA64,
		MIPS16 = IMAGE_FILE_MACHINE_MIPS16,
		ALPHA64 = IMAGE_FILE_MACHINE_ALPHA64,
		MIPSFPU = IMAGE_FILE_MACHINE_MIPSFPU,
		MIPSFPU16 = IMAGE_FILE_MACHINE_MIPSFPU16,
		AXP64 = IMAGE_FILE_MACHINE_AXP64,
		TRICORE = IMAGE_FILE_MACHINE_TRICORE,
		CEF = IMAGE_FILE_MACHINE_CEF,
		EBC = IMAGE_FILE_MACHINE_EBC,
		AMD64 = IMAGE_FILE_MACHINE_AMD64,
		M32R = IMAGE_FILE_MACHINE_M32R,
		CEE = IMAGE_FILE_MACHINE_CEE
	};
}  // namespace PeImageClr
