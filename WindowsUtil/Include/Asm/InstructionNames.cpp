#include "InstructionNames.h"
namespace Asm
{
	const PCSTR InstructionNames[] =
	{
		NULL,
		"aaa",
		"aad",
		"aam",
		"aas",
		"adc",
		"adcx",
		"add",
		"adox",
		"and",
		"andn",
		"arpl",
		"bextr",
		"blendvpd",
		"blendvps",
		"blsi",
		"blsmsk",
		"blsr",
		"bound",
		"bsf",
		"bsr",
		"bswap",
		"bt",
		"btc",
		"btr",
		"bts",
		"bzhi",
		"call",
		"cbw", // 2
		"cwde",
		"cdqe",
		"clac",
		"clc",
		"cld",
		"clflush",
		"cli",
		"clts",
		"cmc",
		"cmova", // 1
		"cmovnbe",
		"cmovae", // 2
		"cmovnb",
		"cmovnc",
		"cmovb", // 2
		"cmovc",
		"cmovnae",
		"cmovbe",// 1
		"cmovna",
		"cmove", // 1
		"cmovz",
		"cmovl", // 1
		"cmovnge",
		"cmovle", // 1
		"cmovng",
		"cmovne", // 1
		"cmovnz",
		"cmovnl", // 1
		"cmovge",
		"cmovnle", // 1
		"cmovg",
		"cmovno",
		"cmovnp", // 1
		"cmovpo",
		"cmovns",
		"cmovo",
		"cmovp", // 1
		"cmovpe",
		"cmovs",
		"cmp",
		"cmps", // b w d
		"cmpxch",
		"cmpxchg",
		"cpuid",
		"crc32",
		"cvtpd2pi",
		"cvtpi2pd",
		"cvtpi2ps",
		"cvtps2pi",
		"cvttpd2pi",
		"cvttps2pi",
		"cwd", // 2
		"cdq",
		"cqo",
		"daa",
		"das",
		"dec",
		"div",
		"emms",
		"enter",
		"esc",
		"fxrstor",
		"fxsave",
		"getsec",
		"hlt",
		"idiv",
		"imul",
		"in",
		"inc",
		"ins", // b w d
		"int",
		"int 3",
		"into",
		"invd",
		"invept",
		"invlpg",
		"invpcid",
		"invvpid",
		"iret", //d q
		"ja", // 1
		"jnbe",
		"jb", // 2
		"jnae",
		"jc",
		"jnz", // 1
		"jne",
		"jbe", // 1
		"jna",
		"jz", // 1
		"je",
		"jg", // 1
		"jnle",
		"jl", // 1
		"jnge",
		"jle", // 1
		"jng",
		"jmp",
		"jmpe",
		"jnb", //2
		"jae",
		"jnc",
		"jnl", // 1
		"jge",
		"jno",
		"jnp", // 1
		"jpo",
		"jns",
		"jo",
		"jp", // 1
		"jpe",
		"jrcxz",
		"js",
		"lahf",
		"lar",
		"ldmxcsr",
		"lds",
		"lea",
		"leave",
		"les",
		"lfence",
		"lfs",
		"lgdt",
		"lgs",
		"lidt",
		"lldt",
		"lmsw",
		"lods", // b w d q
		"loop",
		"loope", // 1
		"loopz",
		"loopne", // 1
		"loopnz",
		"lsl",
		"lss",
		"ltr",
		"lzcnt",
		"maskmovq",
		"mfence",
		"monitor",
		"mov",
		"movd",
		"movq",
		"movbe",
		"movdq2q",
		"movnti",
		"movntq",
		"movq2dq",
		"movs", // b w d q
		"movsx",
		"movsxd",
		"movw",
		"movzx",
		"mul",
		"mulx",
		"mwait",
		"neg",
		"nop",
		"not",
		"or",
		"out",
		"outs", // b w d
		"pabsb",
		"pabsd",
		"pabsw",
		"packssdw",
		"packsswb",
		"packuswb",
		"paddb",
		"paddd",
		"paddq",
		"paddsb",
		"paddsw",
		"paddusb",
		"paddusw",
		"paddw",
		"palignr",
		"pand",
		"pandn",
		"pause",
		"pavgb",
		"pavgw",
		"pblendvb",
		"pcmpeqb",
		"pcmpeqd",
		"pcmpeqw",
		"pcmpgtb",
		"pcmpgtd",
		"pcmpgtw",
		"pdep",
		"pext",
		"pextrw",
		"phaddd",
		"phaddsw",
		"phaddw",
		"phsubd",
		"phsubsw",
		"phsubw",
		"pinsrw",
		"pmaddubsw",
		"pmaddwd",
		"pmaxsw",
		"pmaxub",
		"pminsw",
		"pminub",
		"pmovmskb",
		"pmulhrsw",
		"pmulhuw",
		"pmulhw",
		"pmullw",
		"pmuludq",
		"pop",
		"popa", // 1
		"popad",
		"popf", // d q(64)
		"popcnt",
		"por",
		"prefetch nta",
		"prefetch t0",
		"prefetch t1",
		"prefetch t2",
		"prefetchw",
		"prefix: address size", // 67h
		"prefix: lock", // f0h
		"prefix: operand size", // 66h
		"prefix: repne xacquire", // f2h
		"prefix: reprepe xrelease", // f3h
		"prefix: seg=cs", // 2eh
		"prefix: seg=ds", // 3eh
		"prefix: seg=es", // 26h
		"prefix: seg=fs", // 64h
		"prefix: seg=gs", // 65h
		"prefix: seg=ss", // 36h
		"psadbw",
		"pshufb",
		"pshufw",
		"psignb",
		"psignd",
		"psignw",
		"pslld",
		"psllq",
		"psllw",
		"psrad",
		"psraw",
		"psrld",
		"psrlq",
		"psrlw",
		"psubb",
		"psubd",
		"psubq",
		"psubsb",
		"psubsw",
		"psubusb",
		"psubusw",
		"psubw",
		"punpckhbw",
		"punpckhdq",
		"punpckhwd",
		"punpcklbw",
		"punpckldq",
		"punpcklwd",
		"push",
		"pusha", // 1
		"pushad",
		"pushf", // d q(64)
		"pxor",
		"rcl",
		"rcr",
		"rdfsbase",
		"rdgsbase",
		"rdmsr",
		"rdpmc",
		"rdrand",
		"rdseed",
		"rdtsc",
		"rdtscp",
		"ret",
		"rol",
		"ror",
		"rorx",
		"rsm",
		"sahf",
		"sar",
		"sarx",
		"sbb",
		"scas", // bwdq
		"seta", // 1
		"setnbe",
		"setae", // 2
		"setnb",
		"setnc",
		"setb", // 2
		"setc",
		"setnae",
		"setbe", // 1
		"setna",
		"sete", // 1
		"setz",
		"setg", // 1
		"setnle",
		"setge", // 1
		"setnl",
		"setl", // 1
		"setnge",
		"setle", // 1
		"setng",
		"setne", // 1
		"setnz",
		"setno",
		"setnp", // 1
		"setpo",
		"setns",
		"seto",
		"setp", // 1
		"setpe",
		"sets",
		"sfence",
		"sgdt",
		"shl",
		"sal",
		"shld",
		"shlx",
		"shr",
		"shrd",
		"shrx",
		"sidt",
		"sldt",
		"smsw",
		"stac",
		"stc",
		"std",
		"sti",
		"stmxcsr",
		"stos", // b w d q
		"str",
		"sub",
		"swapgs",
		"syscall",
		"sysenter",
		"sysexit",
		"sysret",
		"test",
		"tzcnt",
		"ud2",
		"vaddpd",
		"vaddps",
		"vaddsd",
		"vaddss",
		"vaddsubpd",
		"vaddsubps",
		"vaesdec",
		"vaesdeclast",
		"vaesenc",
		"vaesenclast",
		"vaesimc",
		"vaeskeygen",
		"vandnpd",
		"vandnps",
		"vandpd",
		"vandps",
		"vblendpd",
		"vblendps",
		"vblendvpd",
		"vblendvps",
		"vbroadcastf128",
		"vbroadcasti128",
		"vbroadcastsd",
		"vbroadcastss",
		"vcmppd",
		"vcmpps",
		"vcmpsd",
		"vcmpss",
		"vcomisd",
		"vcomiss",
		"vcvtdq2pd",
		"vcvtdq2ps",
		"vcvtpd2dq",
		"vcvtpd2ps",
		"vcvtph2ps",
		"vcvtps2dq",
		"vcvtps2pd",
		"vcvtps2ph",
		"vcvtsd2si",
		"vcvtsd2ss",
		"vcvtsi2sd",
		"vcvtsi2ss",
		"vcvtss2sd",
		"vcvtss2si",
		"vcvttpd2dq",
		"vcvttps2dq",
		"vcvttsd2si",
		"vcvttss2si",
		"vdivpd",
		"vdivps",
		"vdivsd",
		"vdivss",
		"vdppd",
		"vdpps",
		"verr",
		"verw",
		"vextractf128",
		"vextracti128",
		"vextractps",
		"vfmadd132ps", // d
		"vfmadd132ss", // d
		"vfmadd213ps", // d
		"vfmadd213ss", // d
		"vfmadd231ps", // d
		"vfmadd231ss", // d
		"vfmaddsub132ps", // d
		"vfmaddsub213ps", // d
		"vfmaddsub231ps", // d
		"vfmsub132ps", // d
		"vfmsub132ss", // d
		"vfmsub213ps",  // d
		"vfmsub213ss", // d
		"vfmsub231ps", // d
		"vfmsub231ss", // d
		"vfmsubadd132ps", // d
		"vfmsubadd213ps", // d
		"vfmsubadd231ps", // d
		"vfnmadd132ps", // d
		"vfnmadd132ss", // d
		"vfnmadd213ps", // d
		"vfnmadd213ss", // d
		"vfnmadd231ps", // d
		"vfnmadd231ss", // d
		"vfnmsub132ps", // d
		"vfnmsub132ss", // d
		"vfnmsub213ps", // d
		"vfnmsub213ss", // d
		"vfnmsub231ps", // d
		"vfnmsub231ss", // d
		"vgatherdd", // q
		"vgatherdps", // d
		"vgatherqd",// q
		"vgatherqps", // d
		"vhaddpd",
		"vhaddps",
		"vhsubpd",
		"vhsubps",
		"vinsertf128",
		"vinserti128",
		"vinsertps",
		"vlddqu",
		"vmaskmovdqu",
		"vmaskmovpd",
		"vmaskmovps",
		"vmaxpd",
		"vmaxps",
		"vmaxsd",
		"vmaxss",
		"vmcall",
		"vmclear",
		"vmfunc",
		"vminpd",
		"vminps",
		"vminsd",
		"vminss",
		"vmlaunch",
		"vmovapd",
		"vmovaps",
		"vmov",
		"vmovddup",
		"vmovdqa",
		"vmovdqu",
		"vmovhlps",
		"vmovhpd",
		"vmovhps",
		"vmovlhps",
		"vmovlpd",
		"vmovlps",
		"vmovmskpd",
		"vmovmskps",
		"vmovntdq",
		"vmovntdqa",
		"vmovntpd",
		"vmovntps",
		"vmovd",
		"vmovq",
		"vmovsd",
		"vmovshdup",
		"vmovsldup",
		"vmovss",
		"vmovupd",
		"vmovups",
		"vmpsadbw",
		"vmptrld",
		"vmptrst",
		"vmread",
		"vmresume",
		"vmulpd",
		"vmulps",
		"vmulsd",
		"vmulss",
		"vmwrite",
		"vmxoff",
		"vmxon",
		"vorpd",
		"vorps",
		"vpabsb",
		"vpabsd",
		"vpabsw",
		"vpackssdw",
		"vpacksswb",
		"vpackusdw",
		"vpackuswb",
		"vpaddb",
		"vpaddd",
		"vpaddq",
		"vpaddsb",
		"vpaddsw",
		"vpaddusb",
		"vpaddusw",
		"vpaddw",
		"vpalignr",
		"vpand",
		"vpandn",
		"vpavgb",
		"vpavgw",
		"vpblendd",
		"vpblendvb",
		"vpblendw",
		"vpbroadcastb",
		"vpbroadcastd",
		"vpbroadcastq",
		"vpbroadcastw",
		"vpclmulqdq",
		"vpcmpeqb",
		"vpcmpeqd",
		"vpcmpeqq",
		"vpcmpeqw",
		"vpcmpestri",
		"vpcmpestrm",
		"vpcmpgtb",
		"vpcmpgtd",
		"vpcmpgtq",
		"vpcmpgtw",
		"vpcmpistri",
		"vpcmpistrm",
		"vperm2f128",
		"vperm2i128",
		"vpermd",
		"vpermilpd",
		"vpermilps",
		"vpermpd",
		"vpermps",
		"vpermq",
		"vpextrb",
		"vpextrd",
		"vpextrq",
		"vpextrw",
		"vphaddd",
		"vphaddsw",
		"vphaddw",
		"vphminposuw",
		"vphsubd",
		"vphsubsw",
		"vphsubw",
		"vpinsrb",
		"vpinsrd",
		"vpinsrq",
		"vpinsrw",
		"vpmaddubsw",
		"vpmaddwd",
		"vpmaskmovd",
		"vpmaskmovq",
		"vpmaxsb",
		"vpmaxsd",
		"vpmaxsw",
		"vpmaxub",
		"vpmaxud",
		"vpmaxuw",
		"vpminsb",
		"vpminsd",
		"vpminsw",
		"vpminub",
		"vpminud",
		"vpminuw",
		"vpmovmskb",
		"vpmovsxbd",
		"vpmovsxbq",
		"vpmovsxbw",
		"vpmovsxdq",
		"vpmovsxwd",
		"vpmovsxwq",
		"vpmovzxbd",
		"vpmovzxbq",
		"vpmovzxbw",
		"vpmovzxdq",
		"vpmovzxwd",
		"vpmovzxwq",
		"vpmuldq",
		"vpmulhrsw",
		"vpmulhuw",
		"vpmulhw",
		"vpmulld",
		"vpmullw",
		"vpmuludq",
		"vpor",
		"vpsadbw",
		"vpshufb",
		"vpshufd",
		"vpshufhw",
		"vpshuflw",
		"vpsignb",
		"vpsignd",
		"vpsignw",
		"vpslld",
		"vpslldq",
		"vpsllq",
		"vpsllvd", // q
		"vpsllw",
		"vpsrad",
		"vpsravd",
		"vpsraw",
		"vpsrld",
		"vpsrldq",
		"vpsrlq",
		"vpsrlvd", // q
		"vpsrlw",
		"vpsubb",
		"vpsubd",
		"vpsubq",
		"vpsubsb",
		"vpsubsw",
		"vpsubusb",
		"vpsubusw",
		"vpsubw",
		"vptest",
		"vpunpckhbw",
		"vpunpckhdq",
		"vpunpckhqdq",
		"vpunpckhwd",
		"vpunpcklbw",
		"vpunpckldq",
		"vpunpcklqdq",
		"vpunpcklwd",
		"vpxor",
		"vrcpps",
		"vrcpss",
		"vroundpd",
		"vroundps",
		"vroundsd",
		"vroundss",
		"vrsqrtps",
		"vrsqrtss",
		"vshufpd",
		"vshufps",
		"vsqrtpd",
		"vsqrtps",
		"vsqrtsd",
		"vsqrtss",
		"vsubpd",
		"vsubps",
		"vsubsd",
		"vsubss",
		"vtestpd",
		"vtestps",
		"vucomisd",
		"vucomiss",
		"vunpckhpd",
		"vunpckhps",
		"vunpcklpd",
		"vunpcklps",
		"vxorpd",
		"vxorps",
		"vzeroall",
		"wait", // 1
		"fwait",
		"wbinvd",
		"wrfsbase",
		"wrgsbase",
		"wrmsr",
		"xabort",
		"xadd",
		"xbegin",
		"xchg",
		"xend",
		"xgetbv",
		"xlat", // 1
		"xlatb",
		"xor",
		"xrstor",
		"xsave",
		"xsaveopt",
		"xsetbv",
		"xtest"
	};
}